{"name":"Twp envchecker","tagline":"Environment checker","body":"twp_envChecker\r\n==============\r\n\r\nEnvironment checker\r\n\r\nhttp://twpdone.github.io/twp_envChecker\r\nFR\r\n\r\nTapez checkEnv -h pour afficher l'aide.\r\n\r\nVous pouvez lancer les verification une par une:<br>\r\n`checkEnv -NomVerif`\r\n\r\nOu toutes Ã  la fois <br>\r\n`checkEnv -all`\r\n\r\n\r\nOptions facultatives<br>\r\n`-eo` : Error only :Seules les erreurs s'affichent<br>\r\n`-nc` : No color : enleve la coloration syntaxique dans la sortie console, utile si vous souhaitez sauvegarder la sortie dans un fichier<br>\r\n`-html` : Produit une sortie html <br>\r\n\t\tRediriger la sortie vers un fichier la sortie pour sauvegarder vos resultats sous format html<br>\r\n`-file fileName` : Execute les verifications que vos avez definies dans le fichier fileName<br>\r\n\r\nPour avoir de l'aide pour creer votre fichier de configuration : <br>\r\n`checkEnv -howToConfig`\r\n\r\nCette option liste les verifications configurables depuis le fichier de config.\r\n\r\n\t\"Le format du fichier de configuration est simple\r\n\t Le format de chaque ligne doit etre :\r\n\t\tcommand:argument[:argument2][:argument3][:...]\r\n\t\r\n\t...\"\r\n\t\r\nExemple de fichier de config :<br>\r\n```\r\n\tsshd:/etc/ssh/sshd_config:PermitRootLogin:yes\r\n\tuserExist:root:system\r\n\tfileOwnership:/bin:bin:bin\r\n```\r\n\r\n/!\\ attention pas d'espaces en debut de ligne, sinon la commande ne sera pas executee\r\n\r\n## DEV CORNER\r\n\r\nPour developper la suite:\r\n\r\nAffichage standard avec la fonction \"normal\", du message de succes de la verification avec \"success\", et message d'echec de la verification avec \"fail\".<br>\r\nCes fonctions sont a utiliser comme echo\r\n\r\nPensez a mettre a jour les fonctions usage, cherckArg, howTo .\r\n\r\nFaire une fonction qui fait un check sur un point precis (un user, un fichier, un fs, ...)<br>\r\nCette fonction prend des Arguments.\r\n\r\nFaire la fonction de check par defaut.<br>\r\nCette fonction appellera autant de fois que necessaire la fonction precedente (fonction de check unitaire)<br>\r\nCette fonction pourra eventuellement lire dans le fichier $CONFIGFILE les regles qui matchent a son nom : <br>\r\n\r\nFunctionName etant le nom de la fonction de test unitaire<br>\r\n\r\n```\r\n\tif test -f $CONFIGFILE\r\n\tthen\r\n\t\tsuccess $Cyan\"*************************\"$Off\r\n\t\tsuccess $Cyan\"Reading from \"$CONFIGFILE$Off\r\n\t\tsuccess $Cyan\"*************************\"$Off\r\n\t\tfunctionNameLines=`cat $CONFIGFILE | egrep \"^functionName\"`\r\n\t\tfor functionNameLine in $functionNameLines\r\n\t\tdo\r\n\t\t\t# les arguments sont separes par \":\"\r\n\t\t\tfunctionNameArg1=`echo $functionNameLine | cut -d \":\" -f 2`\r\n\t\t\tfunctionNameArg2=`echo $functionNameLine | cut -d \":\" -f 3`\r\n\t\t\t\r\n\t\t\tfunctionName $functionNameArg1 $functionNameArg2\r\n\t\tdone\r\n\telse\r\n\t\t# si $CONFIGFILE n'existe pas\r\n\t\t# traitement par default\r\n\tfi\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}